%% File : sfcn_serialReceiveEnergia.tlc
%%
%% Description: 
%%   Simulink Coder TLC Code Generation file for sfcn_serialReceiveEnergia
%%
%% Simulink version      : 8.2 (R2013b) 08-Aug-2013
%% TLC file generated on : 22-Jun-2015 09:34:47

/%
     %%%-MATLAB_Construction_Commands_Start
     def = legacy_code('initialize');
     def.SFunctionName = 'sfcn_serialReceiveEnergia';
     def.OutputFcnSpec = 'void serialReceiveEnergia(int16 p1, uint8 y1[p3], int16 y2[1], int16 p3)';
     def.StartFcnSpec = 'serialInitializeEnergia(int16 p1, int32 p2)';
     def.HeaderFiles = {'serialEnergia.h'};
     def.SourceFiles = {'serialEnergia.c'};
     def.IncPaths = {'C:\MATLAB\SupportPackages\R2013b\TM4C1294NPDT\blocks\src\'};
     def.SrcPaths = {'C:\MATLAB\SupportPackages\R2013b\TM4C1294NPDT\blocks\src\'};
     def.SampleTime = 'parameterized';
     legacy_code('sfcn_tlc_generate', def);
     %%%-MATLAB_Construction_Commands_End
 %/

%implements sfcn_serialReceiveEnergia "C"

%% Function: BlockTypeSetup ===============================================
%%
%function BlockTypeSetup(block, system) void
  %%
  %% The Target Language must be C
  %if ::GenCPP==1
    %<LibReportFatalError("This S-Function generated by the Legacy Code Tool must be only used with the C Target Language")>
  %endif

  %<LibAddToCommonIncludes("serialEnergia.h")>
  %<SLibAddToStaticSources("serialEnergia.c")>

  %%
%endfunction

%% Function: BlockInstanceSetup ===========================================
%%
%function BlockInstanceSetup(block, system) void
  %%
  %<LibBlockSetIsExpressionCompliant(block)>
  %%
%endfunction

%% Function: Start ========================================================
%%
%function Start(block, system) Output
  %%
  %assign p1_val = LibBlockParameter(p1, "", "", 0)
  %assign p2_val = LibBlockParameter(p2, "", "", 0)
  %%
    /* %<Type> (%<ParamSettings.FunctionName>): %<Name> */
  serialInitializeEnergia( (int16_T)%<p1_val>, (int32_T)%<p2_val>);
  %%
%endfunction

%% Function: Outputs ======================================================
%%
%function Outputs(block, system) Output
  %%
  %assign p1_val = LibBlockParameter(p1, "", "", 0)
  %assign p3_val = LibBlockParameter(p3, "", "", 0)
  %assign y1_ptr = LibBlockOutputSignalAddr(0, "", "", 0)
  %assign y2_ptr = LibBlockOutputSignalAddr(1, "", "", 0)
  %%
  serialReceiveEnergia( (int16_T)%<p1_val>, %<y1_ptr>, %<y2_ptr>, (int16_T)%<p3_val>);
  %%
%endfunction

%% [EOF]
