# Copyright 2011-2012 The MathWorks, Inc.
# Autogenerated on: [|||MW_XMK_TIMESTAMP|||]
# Model: [|||MW_XMK_MODEL_NAME[U]|||]
# MyTemplate
# File name: [|||MW_XMK_GENERATED_FILE_NAME|||]
# Template: gmake [|MW_XMK_FORMAT_NAME=stellaris_lp_gmake|]
# Template Version: 1.0 [|MW_XMK_TEMPLATE_VERSION=1.0|]
# Tool Chain Configuration: [|||MW_XMK_TOOL_CHAIN_CFG|||]
# Tool Chain Configuration Version: [|||MW_XMK_TOOL_CHAIN_CFG_VERSION|||]

THIS_MAKEFILE := $(lastword $(MAKEFILE_LIST))
SHELL := cmd
EMPTY :=
SPACE := $(EMPTY) $(EMPTY)
[|MW_XMK_GENERATED_FILE_EXTENSION=.mk|]
MODEL_NAME := [|||MW_XMK_MODEL_NAME|||]
HOST_PLATFORM := [|||MW_XMK_HOST_PLATFORM|||]
BUILD_CFG := [|||MW_XMK_BUILD_CFG|||]
TARGET_EXT := [|||MW_XMK_TARGET_EXT|||]
OBJ_EXT := [|||[.obj]MW_XMK_OBJ_EXT|||]
TOOL_CHAIN_CFG := [|||MW_XMK_TOOL_CHAIN_CFG|||]
FORMAT_PATH = $(if $(filter \\\\%,$(1)),"$(1)",$(subst $(SPACE),\$(SPACE),$(subst \,/,$(1))))
[|MW_XMK_SOURCE_PATH_IDENTIFIER=$(SOURCE_PATH)|]
MATLAB_ROOT_RELATIVE := [|||MW_XMK_MATLAB_ROOT[R]||#MATLAB_ROOT_RELATIVE_END|]
MATLAB_ROOT_ABSOLUTE := [|||MW_XMK_MATLAB_ROOT[E]||#MATLAB_ROOT_ABSOLUTE_END|]
SOURCE_PATH := [|$(call FORMAT_PATH,||MW_XMK_SOURCE_PATH[R]||)|]
[|MW_XMK_OUTPUT_PATH_IDENTIFIER=$(OUTPUT_PATH)|]
OUTPUT_PATH := [|$(call FORMAT_PATH,||[$(SOURCE_PATH)$(BUILD_CFG)/]MW_XMK_OUTPUT_PATH[R]||)|]
[|MW_XMK_DERIVED_PATH_IDENTIFIER=$(DERIVED_PATH)|]
DERIVED_PATH := [|$(call FORMAT_PATH,||[$(SOURCE_PATH)derived/]MW_XMK_DERIVED_PATH[R]||)|]
TARGET_NAME_PREFIX := [|||MW_XMK_TARGET_NAME_PREFIX|||]
TARGET_NAME_POSTFIX := [|||MW_XMK_TARGET_NAME_POSTFIX|||]
TARGET_FILE := $(TARGET_NAME_PREFIX)$(MODEL_NAME)$(TARGET_NAME_POSTFIX)$(TARGET_EXT)
[|MW_XMK_GENERATED_TARGET_IDENTIFIER=$(TARGET)|]
TARGET := $(OUTPUT_PATH)$(TARGET_FILE)

#Code Generation Files
[|MW_XMK_SOURCE_FILES_IDENTIFIER=$(SOURCE_FILES)|]
ifneq (.a,$(strip $(TARGET_EXT)))
SOURCE_FILES := [||$(call FORMAT_PATH,|MW_XMK_SOURCE_FILES[CR]|) ||]
else
SOURCE_FILES := [||$(call FORMAT_PATH,|MW_XMK_SOURCE_FILES[CR]|) ||]
endif
[|MW_XMK_HEADER_FILES_IDENTIFIER=$(HEADER_FILES)|]
HEADER_FILES := [||$(call FORMAT_PATH,|MW_XMK_HEADER_FILES[R]|) ||]
[|MW_XMK_LIBRARY_FILES_IDENTIFIER=$(LIBRARY_FILES)|]
LIBRARY_FILES := [||$(call FORMAT_PATH,|MW_XMK_LIBRARY_FILES[R]|) ||]
[|MW_XMK_OBJECT_FILES_IDENTIFIER=$(OBJ_FILES)|]
OBJ_FILES := $(addprefix $(DERIVED_PATH),$(addsuffix $(OBJ_EXT),$(basename $(notdir $(SOURCE_FILES)))))
[|MW_XMK_SKIPPED_FILES_IDENTIFIER=$(SKIPPED_FILES)|]
SKIPPED_FILES := [|||MW_XMK_SKIPPED_FILES[R]|||]

#Code Generation Information
[|MW_XMK_COMPILER_CODEGEN_IDENTIFIER=$(COMPILER_CODEGENT_ARGS)|]
COMPILER_CODEGEN_ARGS := [|||MW_XMK_COMPILER_CODEGEN|||]
[|MW_XMK_COMPILER_TCCFG_IDENTIFIER=$(COMPILER_TCCFG_ARGS)|]
COMPILER_TCCFG_ARGS := [|||MW_XMK_COMPILER_TCCFG|||]
COMPILER_ARGS := $(COMPILER_CODEGEN_ARGS) $(COMPILER_TCCFG_ARGS)
[|MW_XMK_LINKER_CODEGEN_IDENTIFIER=$(LINKER_CODEGEN_ARGS)|]
LINKER_CODEGEN_ARGS := [|||MW_XMK_LINKER_CODEGEN|||]
[|MW_XMK_LINKER_TCCFG_IDENTIFIER=$(LINKER_TCCFG_ARGS)|]
LINKER_TCCFG_ARGS := [|||MW_XMK_LINKER_TCCFG|||]
LINKER_ARGS := $(LINKER_CODEGEN_ARGS) $(LINKER_TCCFG_ARGS)
[|MW_XMK_PREBUILD_ARGS_IDENTIFIER=$(PREBUILD_ARGS)|]
PREBUILD_ARGS := [|||MW_XMK_PREBUILD_ARGS|||]
[|MW_XMK_POSTBUILD_ARGS_IDENTIFIER=$(POSTBUILD_ARGS)|]
POSTBUILD_ARGS := [|||MW_XMK_POSTBUILD_ARGS|||]
[|MW_XMK_EXECUTE_ARGS_IDENTIFIER=$(EXECUTE_ARGS)|]
EXECUTE_ARGS := [|||MW_XMK_EXECUTE_ARGS|||]

[|include |$(call FORMAT_PATH,|MW_XMK_INCLUDE_FILE[R]|)||]

[|MW_XMK_COMPILER_IDENTIFIER=$(COMPILER)|]
COMPILER ?= [|$(subst \,/,||MW_XMK_COMPILER_PATH||)|]
[|MW_XMK_LINKER_IDENTIFIER=$(LINKER)|]
LINKER ?= [|$(subst \,/,||MW_XMK_LINKER_PATH||)|]
[|MW_XMK_PREBUILD_IDENTIFIER=$(PREBUILD_TOOL)|]
PREBUILD_TOOL ?= [|$(subst \,/,||MW_XMK_PREBUILD_TOOL_PATH||)|]
[|MW_XMK_POSTBUILD_IDENTIFIER=$(POSTBUILD_TOOL)|]
POSTBUILD_TOOL ?= [|$(subst \,/,||MW_XMK_POSTBUILD_TOOL_PATH||)|]
[|MW_XMK_EXECUTE_IDENTIFIER=$(EXECUTE_TOOL)|]
EXECUTE_USES_TARGET = [|||MW_XMK_FEATURE_EXECUTE_TARGET|||]
ifeq ([|||MW_XMK_FEATURE_ON|||],$(EXECUTE_USES_TARGET))
 EXECUTE_TOOL ?= $(TARGET)
else
 EXECUTE_TOOL ?= [|$(subst \,/,||MW_XMK_EXECUTE_TOOL_PATH||)|]
endif
ifeq ([|||MW_XMK_WINDOWS_PLATFORM|||],$(HOST_PLATFORM))
 RM ?= del /q
else
 RM ?= rm -f
endif
ifeq ([|||MW_XMK_WINDOWS_PLATFORM|||],$(HOST_PLATFORM))
 MKDIR ?= mkdir
else
 MKDIR ?= mkdir -p
endif

#Targets
.DEFAULT_GOAL := all

.PHONY : all execute prebuild build postbuild info environment check clean

all : execute

[|MW_XMK_EXECUTE_ACTION_IDENTIFIER=execute|]
ifneq (,$(strip $(EXECUTE_TOOL)))
execute : build
	$(info "Evaluating execute target")
	[|||["$(EXECUTE_TOOL)" $(EXECUTE_ARGS)]MW_XMK_EXECUTE_LINE|||]
else
execute : build
endif

[|MW_XMK_BUILD_ACTION_IDENTIFIER=build|]
build : postbuild
	$(info "Evaluating build target")

ifneq (,$(strip $(PREBUILD_TOOL)))
ifneq (.a,$(strip $(TARGET_EXT)))
prebuild : | $(OUTPUT_PATH) $(DERIVED_PATH)
	$(info "Evaluating prebuild target")
	[|||["$(PREBUILD_TOOL)" $(PREBUILD_ARGS)]MW_XMK_PREBUILD_LINE|||]
    else
prebuild : | $(OUTPUT_PATH) $(DERIVED_PATH)
    endif
else
prebuild : | $(OUTPUT_PATH) $(DERIVED_PATH)
endif

ifneq (,$(strip $(POSTBUILD_TOOL)))
ifneq (.a,$(strip $(TARGET_EXT)))
postbuild : $(TARGET)
	$(info "Evaluating postbuild target")
	[|||["$(POSTBUILD_TOOL)" $(POSTBUILD_ARGS)]MW_XMK_POSTBUILD_LINE|||]
    else
postbuild : $(TARGET)
    endif
else
postbuild : $(TARGET)
endif

ifneq (,$(strip $(LINKER)))
ifneq (.a,$(strip $(TARGET_EXT)))
$(TARGET) : prebuild $(OBJ_FILES)
	[|||["$(LINKER)" $(OBJ_FILES) $(LINKER_ARGS) $(LIBRARY_FILES)]MW_XMK_LINKER_LINE|||]
else
$(TARGET) : $(OBJ_FILES)
	[|||["$(LINKER)" $(LINKER_ARGS) $(OBJ_FILES)]MW_XMK_LINKER_LINE|||]
endif

$(OBJ_FILES) : $(SOURCE_FILES) $(HEADER_FILES)
	[|||["$(COMPILER)" $(COMPILER_ARGS) $(SOURCE_FILES)]MW_XMK_COMPILER_LINE|||]
else
$(TARGET) : prebuild $(SOURCE_FILES) $(HEADER_FILES)
	[|||["$(COMPILER)" $(COMPILER_ARGS) $(SOURCE_FILES)]MW_XMK_COMPILER_LINE|||]
endif

$(OUTPUT_PATH) :
ifeq (,$(wildcard $(OUTPUT_PATH)))
	@$(MKDIR) "$(OUTPUT_PATH)"
endif

$(DERIVED_PATH) :
ifeq (,$(wildcard $(DERIVED_PATH)))
	@$(MKDIR) "$(DERIVED_PATH)"
endif

clean :
	-@$(RM) $(TARGET) $(OBJ_FILES)

info : 
	$(info MODEL_NAME=$(MODEL_NAME))
	$(info HOST_PLATFORM=$(HOST_PLATFORM))
	$(info BUILD_CFG=$(BUILD_CFG))
	$(info TOOL_CHAIN_CFG=$(TOOL_CHAIN_CFG))
	$(info TARGET_EXT=$(TARGET_EXT))
	$(info OBJ_EXT=$(OBJ_EXT))
	$(info SOURCE_PATH=$(SOURCE_PATH))
	$(info OUTPUT_PATH=$(OUTPUT_PATH))
	$(info DERIVED_PATH=$(DERIVED_PATH))
	$(info TARGET_FILE=$(TARGET_FILE))
	$(info TARGET=$(TARGET))
	$(info COMPILER=$(COMPILER))
	$(info COMPILER_ARGS=$(COMPILER_ARGS))
	$(info COMPILER_CODEGEN_ARGS=$(COMPILER_CODEGEN_ARGS))
	$(info COMPILER_TCCFG_ARGS=$(COMPILER_TCCFG_ARGS))
	$(info LINKER=$(LINKER))
	$(info LINKER_ARGS=$(LINKER_ARGS))
	$(info LINKER_CODEGEN_ARGS=$(LINKER_CODEGEN_ARGS))
	$(info LINKER_TCCFG_ARGS=$(LINKER_TCCFG_ARGS))
	$(info PREBUILD_TOOL=$(PREBUILD_TOOL))
	$(info PREBUILD_ARGS=$(PREBUILD_ARGS))
	$(info POSTBUILD_TOOL=$(POSTBUILD_TOOL))
	$(info POSTBUILD_ARGS=$(POSTBUILD_ARGS))
	$(info EXECUTE_TOOL=$(EXECUTE_TOOL))
	$(info EXECUTE_ARGS=$(EXECUTE_ARGS))
	$(info SOURCE_FILES=$(SOURCE_FILES))
	$(info HEADER_FILES=$(HEADER_FILES))
	$(info LIBRARY_FILES=$(LIBRARY_FILES))
	$(info OBJ_FILES=$(OBJ_FILES))
	$(info SKIPPED_FILES=$(SKIPPED_FILES))
	$(info RM=$(RM))
	$(info MKDIR=$(MKDIR))

environment :
	$(if $(findstring [|||MW_XMK_WINDOWS_PLATFORM|||],$(HOST_PLATFORM)),$(info ENVIRONMENT=$(shell set)),$(info ENVIRONMENT=$(shell env)))
